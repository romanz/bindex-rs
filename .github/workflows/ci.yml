name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
     - cron: '0 0 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu_noble:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install Rust
      run: rustup component add rustfmt clippy

    - name: Install other dependencies
      run: sudo apt-get -qqy install build-essential libclang-dev

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: cargo-release-${{ hashFiles('**/Cargo.lock') }}-${{ runner.os }}

    - name: Dependency tree
      run: cargo tree --locked

    - name: Build
      run: |
        cargo build --release --all --locked --timings
        mv -v target/cargo-timings/cargo-timing-*.html .
        mv -v target/release/bindex-cli /usr/local/bin/

    - name: Sanity
      run: |
        bindex-cli --version  # make sure it can run
        bindex-cli --help

    - name: Test
      run: cargo test --release --all --locked

    - name: Format
      run: cargo fmt --all -- --check

    - name: Clippy
      run: cargo clippy --release --all --locked -- -D warnings

    - uses: actions/upload-artifact@v4
      with:
        name: cargo-build-timings
        path: cargo-timing-*.html
        retention-days: 30


  debian_trixie:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: docker build -f Dockerfile.ci . -t bindex:latest
      - name: Sanity
        run: |
          docker run --rm bindex:latest bindex-cli --version
          docker run --rm bindex:latest bindex-cli --help

  python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      # Update output format to enable automatic inline annotations.
      - name: Ruff check
        run: ruff check --output-format=github .
      - name: Ruff format
        run: ruff format --diff
